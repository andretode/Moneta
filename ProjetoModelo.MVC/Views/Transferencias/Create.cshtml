@model Moneta.Application.ViewModels.TransferenciaViewModel
@using System.Web.Mvc
@using Moneta.Application.ViewModels;
@using Moneta.Infra.CrossCutting.Enums;

@{
    ViewBag.Title = "Nova Transferência";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formLancamento" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="control-label col-md-2"></div>
            <div class="col-md-3">
                <h3><span class="label" style="display:block; background-color: lightblue">Transferência</span></h3>
                @Html.HiddenFor(model => model.LancamentoPai.TipoDeTransacao)
                @Html.HiddenFor(model => model.LancamentoPai.CategoriaId)
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">Conta Origem</strong>
            <div class="col-md-10">
                <span style="vertical-align: -33%">@Html.DisplayFor(model => model.LancamentoPai.Conta.Descricao)</span> 
                @Html.HiddenFor(model => model.LancamentoPai.Conta.ContaId)
                @Html.HiddenFor(model => model.LancamentoPai.Conta.Descricao)
            </div>
        </div>

        <div class="form-group">
            <strong class="control-label col-md-2">Conta Destino</strong>
            <div class="col-md-10">
                @Html.DropDownList("ContaIdDestino", (SelectList)@ViewBag.Contas, "-- Selecione uma Conta --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContaIdDestino, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LancamentoPai.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LancamentoPai.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LancamentoPai.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LancamentoPai.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LancamentoPai.Valor, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @step = "0.01" } })
                @Html.ValidationMessageFor(model => model.LancamentoPai.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LancamentoPai.DataVencimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" id="LancamentoPai_DataVencimento" name="LancamentoPai.DataVencimento" class="form-control"
                       value="@Model.LancamentoPai.DataVencimento.ToString("yyyy-MM-dd")">
                @Html.ValidationMessageFor(model => model.LancamentoPai.DataVencimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Criar" class="btn btn-primary" />
                <span class="btn btn-default" onclick="javascript: window.history.back();">Cancelar</span>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}