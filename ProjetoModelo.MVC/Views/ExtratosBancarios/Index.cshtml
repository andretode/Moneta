@model IEnumerable<ExtratoBancarioViewModel>
@using Moneta.Application.ViewModels

@{
    ViewBag.Title = "Extrato Bancário";
}

<h2>@ViewBag.Title</h2>

<p>
    <a class="btn btn-default" title="Importar OFX"
       href="@Url.Action("ImportarOfx", "ExtratosBancarios")">
        <i class="icon-white glyphicon glyphicon-import"></i>
    </a>

    <a id="botaoRemoverSelecionados" class="btn btn-default" title="Remover itens selecionados"
       href="javascript:validarSeExisteSelecionados()">
        <i class="icon-white glyphicon glyphicon-trash"></i>
    </a>
</p>

@using (Html.BeginForm("RemoverSelecionados", "ExtratosBancarios", FormMethod.Post, new { id = "formExtratos" }))
{
    @Html.AntiForgeryToken()
    
    <table class="table table-striped table-condensed">
        <tr>
            <th>
                @Html.CheckBox("selecionarTodos", false, new { @title = "Selecionar todos" })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DataCompensacao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DescricaoResumida)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumeroDocumento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Valor)
            </th>
            <th>
                Ações
            </th>
        </tr>

        @{var extratos = Model.ToList();}
        @for(int i = 0; i < Model.Count(); i++)
        {
            <tr>
                <td>
                    @if (extratos[i].Lancamento == null)
                    {
                        @Html.CheckBoxFor(x => extratos[i].Selecionado)
                        @Html.HiddenFor(x => extratos[i].ExtratoBancarioId)
                    }
                </td>
                <td>
                    @Html.DisplayFor(x => extratos[i].DataCompensacao)
                    @Html.HiddenFor(x => extratos[i].DataCompensacao)
                </td>
                <td>
                    @Html.DisplayFor(x => extratos[i].DescricaoResumida)
                    @if (extratos[i].Descricao.Length >= extratos[i].TamanhoDescricaoResumida)
                    {
                        <a title="@extratos[i].Descricao"><b>...</b></a>
                    }
                    @Html.HiddenFor(x => extratos[i].DescricaoResumida)
                </td>
                <td>
                    @Html.DisplayFor(x => extratos[i].NumeroDocumento)
                    @Html.HiddenFor(x => extratos[i].NumeroDocumento)
                </td>
                <td>
                    @Html.DisplayFor(x => extratos[i].Valor)
                </td>
                <td>
                    @if (extratos[i].Lancamento == null)
                    {
                        <a title="Conciliar com um lançamento"
                           href="javascript:getLancamentosConciliacao('@extratos[i].ExtratoBancarioId')">
                            <i class="icon-white glyphicon glyphicon-link"></i>
                        </a>
                        <a title="Criar um lançamento a partir deste"
                           href="@Url.Action("CriarLancamento", "ExtratosBancarios", new { id = extratos[i].ExtratoBancarioId })">
                            <i class="icon-white glyphicon glyphicon-new-window"></i>
                        </a>
                    }
                </td>
            </tr>
        }
    </table>
}

<!-- 
    Inicio da janela de conciliação
-->
<div id="janela-conciliacao" class="mascara">
    <div class="janela-conciliacao">

        <section class="col-lg-12">
            <h4 class="pull-left">
                <i class="icon-white glyphicon glyphicon-link"></i> Conciliação
            </h4>
            <a href="javascript:closeWindow()" class="pull-right btn-lg" style="" title="Fechar">
                <i class="icon-white glyphicon glyphicon-remove"></i>
            </a>
        </section>
        <br />
        <section class="col-lg-12">
            <div>
                <input type="hidden" id="ExtratoBancarioIdSelecionado" name="ExtratoBancarioIdSelecionado" value="0">
            </div>
        </section>
        <br />
        <section class="col-lg-12">
            <div id="dvConciliacao"></div>
        </section>
    </div>
</div>
<!--
    Fim da janela de conciliação
-->

@section Scripts {

<script type="text/javascript">

    // Pega Lançamentos para serem conciliados
    function getLancamentosConciliacao(id) {
        $('#dvConciliacao').html('<img src="/Content/images/loading.gif">');
        $('#ExtratoBancarioIdSelecionado').val(id);
        $.ajax(
        {
            type: 'GET',
            url: '/ExtratosBancarios/GetLancamentosConciliacao?extratoBancarioId=' + id,
            dataType: 'html',
            cache: false,
            async: true,
            success: function (data) {
                $('#dvConciliacao').html(data);
            }
        });
        $("#janela-conciliacao").fadeIn();
    }

    // Valida antes de submeter a requisição
    function validarSeExisteSelecionados() {
        var numberChecked = $('input:checkbox:checked').length;
        if (numberChecked == 0) {
            alert("Selecione pelo menos um item");
        }
        else {
            if (confirm("Deseja realmente continuar com a remoção?"))
                document.getElementById('formExtratos').submit();
        }
    }

    // Salvar dados do extrato no lançamento
    function SalvarEdicaoNoLancamentoVM() {
        var lancamentoIdSelecionado = $('input[name=radio_lancamentos]:checked').val();

        if (lancamentoIdSelecionado == null)
            return alert("Selecione um lançamento para ser conciliado");

        var lancamentoJson = $('#Lancamento_' + lancamentoIdSelecionado).val();
        lancamentoVM = JSON.parse(lancamentoJson);
        
        if (document.getElementById("chkValor").checked)
            lancamentoVM.Valor = $('#ExtratoBancario_Valor').val().replace(",", ".");
        if (document.getElementById("chkData").checked)
            lancamentoVM.DataVencimento = StrToDate($('#ExtratoBancario_DataCompensacao').val());

        lancamentoJson = JSON.stringify(lancamentoVM);
        alert(lancamentoJson);
        conciliar(lancamentoJson);
    }

    function StrToDate(strDate)
    {
        d = strDate.substring(0, 2);
        m = strDate.substring(3, 5);
        y = strDate.substring(6, 10);
        
        date = new Date(y, m - 1, d, 0, 0, 0);
        return date;
    }

    // Envia o lançamento e extrato a serem conciliados
    function conciliar(lancamentoJson) {
        $.post("/ExtratosBancarios/ConciliarLancamento",
            { lancamentoJson: lancamentoJson, extratoBancarioId: $('#ExtratoBancarioIdSelecionado').val() },
            function (data) {
                if (data.status === "Ok") {
                    location.reload()
                }
                else {
                    alert("Erro ao realizar a conciliação!")
                    $("#janela-conciliacao").hide();
                }
            }
        );
    }

    // Checkbox selecionar todos
    $("#selecionarTodos").click(function () {
        $('input:checkbox').not(this).prop('checked', this.checked);
    });

    // Fecha janela de conciliação
    function closeWindow() {
        $("#janela-conciliacao").hide();
    }
    </script>
}

<style>
    tr.espacoEntreColunas > td
    {
      padding-right: 1em;
    }

    .janela-conciliacao {
        display: block;
        width: 600px;
        position: absolute;
        left: -100px;
        top: 0;
        background: #FFF;
        z-index: 9900;
        padding: 10px;
        border-radius: 10px;
        -webkit-box-shadow: -1px -8px 72px -6px rgba(0,0,0,0.75);
        -moz-box-shadow: -1px -8px 72px -6px rgba(0,0,0,0.75);
        box-shadow: -1px -8px 72px -6px rgba(0,0,0,0.75);
    }

    .mascara {
        display: none;
        position: absolute;
        margin: 25%;
        top: 0;
        width: 100%;
        z-index: 9000;
        background-color: #000;
    }

    @@media only screen and (max-width: 992px) {

        .janela-conciliacao {
            display: block;
            width: 90%;
            position: absolute;
            left: -50px;
            top: 0;
            background: #FFF;
            z-index: 9900;
            padding: 10px;
            border-radius: 10px;
            -webkit-box-shadow: -1px -8px 72px -6px rgba(0,0,0,0.75);
            -moz-box-shadow: -1px -8px 72px -6px rgba(0,0,0,0.75);
            box-shadow: -1px -8px 72px -6px rgba(0,0,0,0.75);
        }

        .mascara {
            display: none;
            position: absolute;
            left: 0;
            margin: 20%;
            top: 0;
            width: 100%;
            z-index: 9000;
            background-color: #000;
        }
    }
</style>