@model Moneta.Application.ViewModels.LancamentoViewModel
@using Moneta.Application.ViewModels;
@using Moneta.Infra.CrossCutting.Enums;
@using Newtonsoft.Json;

@{
    ViewBag.Title = "Detalhes do Lançamento";
}

<h2>@ViewBag.Title</h2>

<div>
    <hr/>
    <dl class="dl-horizontal">
        
        <dt>
        </dt>
        <dd>
            @{
                var cor = "lightcoral";
                if (Model.TipoDeTransacao == TipoTransacaoEnum.Receita)
                {
                    cor = "lightgreen";
                }

                var jsSettings = new JsonSerializerSettings
                {
                    NullValueHandling = NullValueHandling.Ignore,
                    ReferenceLoopHandling = ReferenceLoopHandling.Serialize,
                    PreserveReferencesHandling = PreserveReferencesHandling.Objects
                };
                string jsonLancamento = JsonConvert.SerializeObject(Model, Formatting.Indented, jsSettings);
            }
            <div class="col-md-3">
                <h3><span class="label" style="display:block; background-color: @cor">@Model.TipoDeTransacao</span></h3>
            </div>
        </dd>
        @if(Model.GrupoLancamento!=null)
        {
            <dt>
                Grupo
            </dt>
            <dd>
                @Html.DisplayFor(model => model.GrupoLancamento.Descricao)
            </dd>
        }
        <dt>
            @Html.DisplayNameFor(model => model.Descricao)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.DescricaoMaisNumeroParcela)
            @Html.HiddenFor(model => model.Descricao)
            @Html.HiddenFor(model => model.LancamentoIdTransferencia)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Valor)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Valor)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DataVencimento)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.DataVencimento)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Categoria)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Categoria.Descricao)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Conta)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Conta.Descricao)
        </dd>

        @if (Model.NumeroDocumento != null && Model.NumeroDocumento != "")
        {
            <dt>
                @Html.DisplayNameFor(model => model.NumeroDocumento)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.NumeroDocumento)
            </dd>
        }

        @if (Model.Observacao != null && Model.Observacao != "")
        {
            <dt>
                @Html.DisplayNameFor(model => model.Observacao)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Observacao)
            </dd>
        }
        
        <dt>
            @Html.DisplayNameFor(model => model.Pago)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Pago)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DataCadastro)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.DataCadastro)
        </dd>

        <dt></dt>
        <dd>
            <br />

            @using (Html.BeginForm("EditJson", null, FormMethod.Post, new { id = "formLancamentoEditJson" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("jsonLancamento", jsonLancamento)
            }

            @using (Html.BeginForm("DeleteJson", null, FormMethod.Post, new { id = "formLancamentoDeleteJson" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("jsonLancamento", jsonLancamento)
            }

            @using (Html.BeginForm("Dividir", "GrupoLancamentos",
                new GrupoLancamentoViewModel {
                    ContaId = Model.ContaId,
                    ExtratoBancarioId = Model.ExtratoBancarioId,
                    GrupoLancamentoIdPai = Model.GrupoLancamentoId,
                    Descricao = Model.Descricao,
                    DataVencimento = Model.DataVencimento,
                    NumeroDocumento = Model.NumeroDocumento,
                    LancamentoIdDividido = Model.LancamentoId
                },
                FormMethod.Post,
                new { id = "formLancamentoDividirJson" }))
            {
                @Html.AntiForgeryToken()
            }
            
            <a class="btn btn-default" title="Voltar" onclick="javascript: window.history.back();">
                <i class="icon-white glyphicon glyphicon-arrow-left"></i>
            </a>

            <a class="btn btn-default" title="Editar"
               href="#" onclick="document.getElementById('formLancamentoEditJson').submit();">
                <i class="icon-white glyphicon glyphicon-edit"></i>
            </a>

            @if (Model.PodeSerDividido)
            {
                <a class="btn btn-default" title="Dividir"
                   href="#" onclick="document.getElementById('formLancamentoDividirJson').submit();">
                    <i class="icon-white glyphicon glyphicon-list-alt"></i>
                </a>
            }

            <a class="btn btn-default" title="Remover"
               href="#" onclick="document.getElementById('formLancamentoDeleteJson').submit();">
                <i class="icon-white glyphicon glyphicon-trash"></i>
            </a>

        </dd>
    </dl>

    @if (Model.ExtratoBancario != null)
    {
        <hr />
        <h4>
            <i class="icon-white glyphicon glyphicon-link"></i>
            Extrato Bancário Conciliado
        </h4>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.ExtratoBancario.Descricao)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ExtratoBancario.Descricao)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ExtratoBancario.Valor)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ExtratoBancario.Valor)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ExtratoBancario.DataCompensacao)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ExtratoBancario.DataCompensacao)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ExtratoBancario.NumeroDocumento)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ExtratoBancario.NumeroDocumento)
            </dd>
        </dl>
    }
</div>