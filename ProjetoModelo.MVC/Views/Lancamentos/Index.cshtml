@model Moneta.Application.ViewModels.LancamentosDoMesViewModel
@using Newtonsoft.Json;

@{
    ViewBag.Title = "Lançamentos";
}

<h2>@ViewBag.Title</h2>

<div class="form-horizontal">

    @if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
    {
        <div class="alert alert-warning fade in">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>Atenção!</strong> @Html.ValidationSummary(false)
        </div>
    }
    
    @Html.ValidationSummary(false, "Atenção!", new { @class = "alert alert-warning fade in" })

    @using (Html.BeginForm("Index", "Lancamentos", new { @Model.MesAnoCompetencia }, FormMethod.Post, new { id = "formFiltros" }))
    {
        <div class="form-group col-md-12">
            <div tabindex="0" class="dropdown">
                <label class="btn btn-inicial" title="Clique abrir as opções de lançamento">
                    <span class="glyphicon glyphicon-plus"></span>
                </label>
                <div class="dropdown-content">
                    <div class="btn-despesa">
                        <button class="btn" type="submit" name="action:AdicionarDespesa" title="Adicionar uma Despesa" style="width:100%">Despesa</button>
                    </div>
                    <div class="btn-receita">
                        <button class="btn" type="submit" name="action:AdicionarReceita" title="Adicionar uma Receita" style="width:100%">Receita</button>
                    </div>
                    <div class="btn-transferencia">
                        <button class="btn" type="submit" name="action:RealizarTransferencia" title="Adicionar uma Transferência" style="width:100%">Transferência</button>
                    </div>
                </div>
            </div>


            @Html.DropDownListFor(model => model.ContaIdFiltro, (SelectList)@ViewBag.Contas, "-- Todas as Contas --", new { @class = "form-control", @style = "display:inline-block" })
            @Html.TextBoxFor(model => model.PesquisarDescricao, new { @class = "form-control", @placeholder = "Pesquisar pela Data ou Descrição", @style = "display:inline-block" })
            <button type="submit" value="Pesquisar" name="action:Pesquisar" class="btn btn-default" title="Pesquisar" style="display:inline-block">
                <span class="glyphicon glyphicon-search"></span>
            </button>
        </div>
    }
    
    <table style="width:100%;background-color:gray;color:white">
        <tr>
            <td class="col-xs-4"></td>
            <td class="col-sm-4 col-md-4">
                <h5>
                    <a class="text-right col-md-2" title="Mês Anterior" href="@Url.Action("AlterarMes", "Lancamentos", new { @Model.MesAnoCompetencia, @Model.ContaIdFiltro, addMonths = -1 })">
                        <i class="glyphicon glyphicon-chevron-left" style="color: white"></i>
                    </a>
                    <span class="text-center col-md-8">
                        @Model.MesAnoCompetencia.ToString("MMMM yyyy").ToUpper()
                    </span>
                    <a class="text-left col-md-2" title=" próximo mês" href="@Url.Action("AlterarMes", "Lancamentos", new { @Model.MesAnoCompetencia, @Model.ContaIdFiltro, addMonths = +1 })">
                        <i class="glyphicon glyphicon-chevron-right" style="color: white"></i>
                    </a>
                </h5>
            </td>
            <td></td>
        </tr>
    </table>
</div>

<table class="table table-striped table-condensed">
    <tr style="background-color: #e6e6e6">
        @{string corSaldoDoMesAnterior = (Model.SaldoDoMesAnterior > 0 ? "green" : "red");}
        <td colspan="5" class="text-right">Saldo do Mês Anterior: <span style="color: @corSaldoDoMesAnterior">@Html.DisplayFor(model => model.SaldoDoMesAnterior)</span></td>
        <td><i title="O saldo é contabilizado independente se o lançamento foi ou não pago" class="glyphicon glyphicon-question-sign"></i></td>
    </tr>

    @if (Model.LancamentosDoMesPorConta.Count() == 0)
    {
        <tr>
            <td colspan="6" class="text-danger" align="center">Selecione uma Conta para mostrar os lançamentos relacionados</td>
        </tr>
    }
    else
    {
        foreach (var item in @Model.LancamentosDoMesPorConta)
        {
            var jsSettings = new JsonSerializerSettings
            {
                NullValueHandling = NullValueHandling.Ignore,
                ReferenceLoopHandling = ReferenceLoopHandling.Serialize,
                PreserveReferencesHandling = PreserveReferencesHandling.Objects
            };
            string jsonLancamento = JsonConvert.SerializeObject(item, Formatting.Indented, jsSettings);

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DataVencimento)
                    &nbsp;
                    <a class="visible-xs visible-sm visible-md-inline visible-lg-inline" href="@Url.Action("Details", "Lancamentos", new { jsonLancamento })">
                        @item.DescricaoResumida
                    </a>
                    @Html.HiddenFor(modelItem => item.Descricao)
                </td>
                <td>
                    @if (item.LancamentoParceladoId != null)
                    {
                        <span class="visible-lg-inline">
                            <i class="icon-white glyphicon glyphicon-retweet" title="Este é um lançamento que repete em outras datas"></i>
                        </span>
                    }
                    @Html.HiddenFor(modelItem => item.Fake)
                </td>
                <td>
                    @if (Model.ContaIdFiltro == Guid.Empty)
                    {
                        <span class="visible-md visible-lg">@item.Conta.Descricao</span>
                    }
                </td>
                <td>
                    <button class="btn" style="background-color: @item.Categoria.Cor" title="@item.Categoria.Descricao"></button>
                    <span class="visible-xs visible-sm visible-md-inline visible-lg-inline">@item.Categoria.Descricao</span>
                </td>
                <td class="text-right">
                    @if (item.Valor > 0)
                    {
                        <span style="color:green">
                            @Html.DisplayFor(modelItem => item.Valor)
                        </span>
                    }
                    else
                    {
                        <span style="color:red">
                            @Html.DisplayFor(modelItem => item.Valor)
                        </span>
                    }
                </td>
                <td>
                    @if (item.Pago)
                    {
                        <a title="Clique para informar que não foi pago"
                           href="@Url.Action("TrocarPago", "Lancamentos", new { jsonLancamento })">
                            <i class="icon-white glyphicon glyphicon-thumbs-up" style="color:green"></i>
                        </a>
                    }
                    else
                    {
                        <a title="Clique para informar que foi pago"
                           href="@Url.Action("TrocarPago", "Lancamentos", new { jsonLancamento })">
                            <i class="icon-white glyphicon glyphicon-thumbs-down" style="color:red"></i>
                        </a>
                    }
                </td>
            </tr>
        }

        string corSaldoAtualDoMesPorConta = (Model.SaldoAtualDoMesPorConta > 0 ? "green" : "red");
        string corSaldoDoMesPorConta = (Model.SaldoDoMesPorConta > 0 ? "green" : "red");
        string corSaldoDoMesTodasAsContas = (Model.SaldoDoMesTodasAsContas > 0 ? "green" : "red");

        <tr class="text-right">
            <td colspan="5">
                <h5>Saldo Atual: <strong style="color: @corSaldoAtualDoMesPorConta">@Html.DisplayFor(model => model.SaldoAtualDoMesPorConta)</strong></h5>
                <h5>Saldo no fim do mês: <strong style="color: @corSaldoDoMesPorConta">@Html.DisplayFor(model => model.SaldoDoMesPorConta)</strong></h5>
                <h6>Saldo de todas as contas no fim do mês: <span style="color: @corSaldoDoMesTodasAsContas">@Html.DisplayFor(model => model.SaldoDoMesTodasAsContas)</span></h6>
            </td>
            <td></td>
        </tr>
    }
</table>

<link rel="stylesheet" href="~/Content/botao-novo-lancamento.css">

@section Scripts {
    <script type="text/javascript">
        $(function () {
            $('#ContaIdFiltro').change(function () {
                $('#formFiltros').submit();
            });
        });
    </script>
}