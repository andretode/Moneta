@model Moneta.Application.ViewModels.LancamentosDoMesViewModel
@using Moneta.Infra.CrossCutting.Enums
@using Newtonsoft.Json;

@{
    ViewBag.Title = "Lançamentos";
}

<h2>@ViewBag.Title</h2>

<div class="form-horizontal">
    @Html.ValidationSummary(false, "Atenção!", new { @class = "alert alert-warning fade in" })

    @using (Html.BeginForm("Index", "Lancamentos", new { @Model.MesAnoCompetencia }, FormMethod.Post, new { id = "formFiltros", onsubmit = "return IsValidForm()" }))
    {
        <div class="form-group col-md-12">
            <div tabindex="0" class="dropdown">
                <label class="btn btn-inicial" title="Clique para abrir as opções de lançamento">
                    <span class="glyphicon glyphicon-plus"></span>
                </label>
                <div class="dropdown-content">
                    <div class="btn-despesa">
                        <button class="btn type="submit" name="action:AdicionarDespesa" title="Adicionar uma Despesa" style="width:100%">Despesa</button>
                    </div>
                    <div class="btn-receita">
                        <button class="btn" type="submit" name="action:AdicionarReceita" title="Adicionar uma Receita" style="width:100%">Receita</button>
                    </div>
                    <div class="btn-transferencia">
                        <button class="btn" type="submit" name="action:RealizarTransferencia" title="Adicionar uma Transferência" style="width:100%">Transferência</button>
                    </div>
                </div>
            </div>
            @Html.DropDownListFor(model => model.ContaIdFiltro, (SelectList)@ViewBag.Contas, "-- Todas as Contas --", new { @class = "form-control", @style = "display:inline-block" })

            <span>
                @Html.TextBoxFor(model => model.PesquisarDescricao, new { @class = "form-control", @placeholder = "Pesquisar pela Data ou Descrição", @style = "display:inline-block" })
                <button type="submit" value="Pesquisar" id="BotaoPesquisar" name="action:Pesquisar" class="btn btn-default" title="Pesquisar" style="display:inline-block">
                    <span class="glyphicon glyphicon-search"></span>
                </button>
            </span>

        </div>
    }

    <div style="width:100%;background-color:gray;color:white;display:flex;min-height: 30px;align-items:center;z-index:-1">
        <a class="text-right col-xs-4 col-md-4" title="Mês Anterior" href="@Url.Action("AlterarMes", "Lancamentos", new { @Model.MesAnoCompetencia, @Model.ContaIdFiltro, addMonths = -1 })">
            <i class="glyphicon glyphicon-chevron-left" style="color: white"></i>
        </a>
        <div class="text-center col-xs-4 col-md-4">
            @Model.MesAnoCompetencia.ToString("MMMM yyyy").ToUpper()
        </div>
        <a class="text-left col-xs-4 col-md-4" title=" próximo mês" href="@Url.Action("AlterarMes", "Lancamentos", new { @Model.MesAnoCompetencia, @Model.ContaIdFiltro, addMonths = +1 })">
            <i class="glyphicon glyphicon-chevron-right" style="color: white"></i>
        </a>
    </div>
</div>

@{string corSaldoDoMesAnterior = (Model.SaldoDoMesAnterior > 0 ? "green" : "red");}

<table class="table table-striped table-condensed">
    <thead>
        <tr style="background-color: #e6e6e6">
            <th colspan="5" class="text-right">Saldo do Mês Anterior: <span style="color: @corSaldoDoMesAnterior">@Html.DisplayFor(model => model.SaldoDoMesAnterior)</span></th>
            <th><i title="O saldo é contabilizado independente se o lançamento foi ou não pago" class="glyphicon glyphicon-info-sign"></i></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.LancamentosAgrupados.Count() == 0)
        {
            <tr>
                <td colspan="6" class="text-danger" align="center">Selecione uma Conta para mostrar os lançamentos relacionados</td>
            </tr>
        }
        else
        {
            foreach (var item in @Model.LancamentosAgrupados)
            {                
                var jsSettings = new JsonSerializerSettings
                {
                    NullValueHandling = NullValueHandling.Ignore,
                    ReferenceLoopHandling = ReferenceLoopHandling.Serialize,
                    PreserveReferencesHandling = PreserveReferencesHandling.Objects
                };
                string jsonLancamento = JsonConvert.SerializeObject(item, Formatting.Indented, jsSettings);

                <tr>
                    @if(item.Lancamentos.Count() > 1)
                    {
                        <td></td>
                        <td>
                                <span class="visible-md visible-lg">@item.Descricao</span>
                        </td>
    <td></td>
    <td></td>
    <td>@item.Lancamentos.Sum(l => l.Valor)</td>
    <td></td>
                    }
                    else
                    {
                    <td>
                        @Html.DisplayFor(modelItem => item.Lancamentos[0].DataVencimento)
                        &nbsp;
                        <span class="visible-xs visible-sm visible-md-inline visible-lg-inline">
                            @if (item.Lancamentos[0].TipoDeTransacao == TipoTransacaoEnum.Transferencia)
                            {
                                <a href="@Url.Action("Details", "Transferencias", new { id = item.Lancamentos[0].LancamentoId })">@item.Lancamentos[0].DescricaoResumida</a>
                            }
                            else
                            {
                                <a href="@Url.Action("Details", "Lancamentos", new { jsonLancamento })">@item.Lancamentos[0].DescricaoResumida</a>
                            }
                        </span>
                        @Html.HiddenFor(modelItem => item.Lancamentos[0].Descricao)
                    </td>
                    <td>
                        @if (item.Lancamentos[0].LancamentoParceladoId != null)
                        {
                            <span class="visible-lg-inline">
                                <i class="icon-white glyphicon glyphicon-retweet" title="Este é um lançamento s repete em outras datas"></i>
                            </span>
                        }
                        @if (item.Lancamentos[0].TipoDeTransacao == TipoTransacaoEnum.Transferencia && item.Lancamentos[0].LancamentoIdTransferencia != null)
                        {
                            <span class="visible-lg-inline">
                                <i class="icon-white glyphicon glyphicon-transfer" title="Transferência entre contas"></i>
                            </span>
                        }
                        @Html.HiddenFor(modelItem => item.Lancamentos[0].Fake)
                    </td>
                    <td>
                        @if (Model.ContaIdFiltro == Guid.Empty)
                        {
                            <span class="visible-md visible-lg">@item.Lancamentos[0].Conta.Descricao</span>
                        }
                    </td>
                    <td>
                        <button class="btn" style="background-color: @item.Lancamentos[0].Categoria.Cor" title="@item.Lancamentos[0].Categoria.Descricao"></button>
                        <span class="visible-xs visible-sm visible-md-inline visible-lg-inline">@item.Lancamentos[0].Categoria.Descricao</span>
                    </td>
                    <td class="text-right">
                        @if (item.Lancamentos[0].Valor > 0)
                        {
                            <span style="color:green">
                                @Html.DisplayFor(modelItem => item.Lancamentos[0].Valor)
                            </span>
                        }
                        else
                        {
                            <span style="color:red">
                                @Html.DisplayFor(modelItem => item.Lancamentos[0].Valor)
                            </span>
                        }
                    </td>
                    <td>
                        @if (item.Lancamentos[0].Pago)
                        {
                            <a title="Clique para informar que não foi pago"
                               href="@Url.Action("TrocarPago", "Lancamentos", new { jsonLancamento })">
                                <i class="icon-white glyphicon glyphicon-thumbs-up" style="color:green"></i>
                            </a>
                        }
                        else
                        {
                            string corDataVencimentoPago = "gray";
                            if (!item.Lancamentos[0].Pago && item.Lancamentos[0].DataVencimento < DateTime.Now)
                            {
                                corDataVencimentoPago = "red";
                            }

                            <a title="Clique para informar que foi pago"
                               href="@Url.Action("TrocarPago", "Lancamentos", new { jsonLancamento })">
                                <i class="icon-white glyphicon glyphicon-thumbs-down" style="color:@corDataVencimentoPago"></i>
                            </a>
                        }
                    </td>
                    }
                    
                </tr>
            }

            string corSaldoAtualDoMes = (Model.SaldoAtualDoMes > 0 ? "green" : "red");
            string corSaldoDoMes = (Model.SaldoDoMes > 0 ? "green" : "red");

            <tr>
                <td colspan="2" class="text-left">
                    <h6>Receitas previstas no mês: <span style="color:green">@Html.DisplayFor(model => model.ReceitaTotal)</span></h6>
                    <h6>Despesas previstas no mês: <span style="color:red">@Html.DisplayFor(model => model.DespesaTotal)</span></h6>
                </td>
                <td colspan="3" class="text-right">
                    <h5>Saldo atual: <strong style="color: @corSaldoAtualDoMes">@Html.DisplayFor(model => model.SaldoAtualDoMes)</strong></h5>
                    <h6>Previsto para o fim do mês: <strong style="color: @corSaldoDoMes">@Html.DisplayFor(model => model.SaldoDoMes)</strong></h6>
                </td>
                <td>
                    <h5><i title="O saldo é contabilizado considerando o saldo do mês anterior" class="glyphicon glyphicon-info-sign"></i></h5>
                </td>
            </tr>
        }
    </tbody>
</table>

<link rel="stylesheet" href="~/Content/botao-novo-lancamento.css">

@section Scripts {
    <script type="text/javascript">
        var mudouConta = false;
        var clicouPesquisar = false;

        $(function () {
            $('#ContaIdFiltro').change(function () {
                mudouConta = true;
                $('#formFiltros').submit();
            });

            $('#BotaoPesquisar').click(function () {
                clicouPesquisar = true;
                $('#formFiltros').submit();
            });
        });

        function IsValidForm()
        {
            if (!mudouConta && !clicouPesquisar && $('#ContaIdFiltro').val() == "") {
                alert("Selecione uma conta!");
                return false;
            }
            else {
                return true;
            }
        }
    </script>
}