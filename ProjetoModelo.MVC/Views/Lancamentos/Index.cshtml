@model Moneta.Application.ViewModels.LancamentosDoMesViewModel

@{
    ViewBag.Title = "Lançamentos";
}

<h2>@ViewBag.Title</h2>

<div class="form-horizontal">
    @using (Html.BeginForm("Index", "Lancamentos", new { pesquisa = "" }, FormMethod.Post))
    {
        <div class="form-group col-md-12">

            <div class="dropdown">
                <button class="btn btn-inicial" title="Realizar um Lançamento">
                    <span class="glyphicon glyphicon-plus"></span>
                </button>
                <div class="dropdown-content">
                    <div class="btn-despesa">
                        <button class="btn" type="submit" name="action:AdicionarDespesa" title="Adicionar uma Despesa" style="width:100%">Despesa</button>
                    </div>
                    <div class="btn-receita">
                        <button class="btn" type="submit" name="action:AdicionarReceita" title="Adicionar uma Receita" style="width:100%">Receita</button>
                    </div>
                    <div class="btn-transferencia">
                        <button class="btn" type="submit" name="action:RealizarTransferencia" title="Adicionar uma Transferência" style="width:100%">Transferência</button>
                    </div>
                </div>
            </div>


            @Html.DropDownListFor(model => model.ContaIdFiltro, (SelectList)@ViewBag.Contas, "-- Selecione uma Conta --", new { @class = "form-control", @style = "display:inline-block" })
            @Html.ValidationMessageFor(model => model.ContaIdFiltro, "", new { @class = "text-danger", @style = "display:inline-block" })
            @Html.TextBox("pesquisa", null, new { @class = "form-control", @placeholder = "Pesquisar pela Descrição", @style = "display:inline-block" })
            <button type="submit" value="Pesquisar" name="action:Pesquisar" class="btn btn-default" title="Pesquisar" style="display:inline-block">
                <span class="glyphicon glyphicon-search"></span>
            </button>
        </div>
    }
</div>

<div class="text-center">
    <h3>
        <span class="label label-default" style="width:100%">
            &nbsp;&nbsp;
            <a title="Mês Anterior" href="@Url.Action("AlterarMes", "Lancamentos", new { @Model.MesAnoCompetencia, @Model.ContaIdFiltro, addMonths = -1 })">
                <i class="icon-white glyphicon glyphicon-arrow-left" style="color: white"></i>
            </a>
            &nbsp;&nbsp;@Model.MesAnoCompetencia.ToString("MMMM yyyy").ToUpper()&nbsp;&nbsp;
            <a title="Mês Anterior" href="@Url.Action("AlterarMes", "Lancamentos", new { @Model.MesAnoCompetencia, @Model.ContaIdFiltro, addMonths = +1 })">
                <i class="icon-white glyphicon glyphicon-arrow-right" style="color: white"></i>
            </a>
            &nbsp;&nbsp;
        </span>
    </h3>
</div>

<table class="table">
    <tr style="background-color: #e6e6e6">
        <th></th>
        <th></th>
        @{string corSaldoDoMesAnterior = (Model.SaldoDoMesAnterior > 0 ? "green" : "red");}
        <td class="text-right">Saldo do Mês Anterior: <span style="color: @corSaldoDoMesAnterior">@Html.DisplayFor(model => model.SaldoDoMesAnterior)</span></td>
        <th></th>
    </tr>

    @if (Model.LancamentosDoMesPorConta.Count() == 0)
    {
        <tr>
            <td colspan="5" class="text-danger" align="center">Selecione uma Conta para mostrar os lançamentos relacionados</td>
        </tr>
    }
    else
    {
        foreach (var item in @Model.LancamentosDoMesPorConta)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DataVencimento)
                    &nbsp;
                    <a href="@Url.Action("Details", "Lancamentos", new { id = (item.LancamentoId) }) " class="visible-xs visible-sm visible-md-inline visible-lg-inline">
                        @Html.DisplayFor(modelItem => item.Descricao)
                    </a>
                </td>
                <td>
                    <button class="btn btn-xs" style="background-color: @item.Categoria.Cor" title="@item.Categoria.Descricao">
                        <i class="icon-white glyphicon glyphicon-th-list"></i>
                    </button>
                    <span class="visible-md-inline visible-lg-inline">@item.Categoria.Descricao</span>
                </td>
                <td class="text-right">
                    @if (item.Valor > 0)
                    {
                        <span style="color:green">
                            @Html.DisplayFor(modelItem => item.Valor)
                        </span>
                    }
                    else
                    {
                        <span style="color:red">
                            @Html.DisplayFor(modelItem => item.Valor)
                        </span>
                    }
                </td>
                <td>
                    @if (item.Pago)
                    {
                        <a title="Clique para informar que não foi pago"
                           href="@Url.Action("TrocarPago", "Lancamentos", new { lancamentoId = (item.LancamentoId), contaIdFiltro = item.ContaId })">
                            <i class="icon-white glyphicon glyphicon-thumbs-up" style="color:green"></i>
                        </a>
                    }
                    else
                    {
                        <a title="Clique para informar que foi pago"
                           href="@Url.Action("TrocarPago", "Lancamentos", new { lancamentoId = (item.LancamentoId), contaIdFiltro = item.ContaId })">
                            <i class="icon-white glyphicon glyphicon-thumbs-down" style="color:red"></i>
                        </a>
                    }
                </td>
            </tr>
        }

        string corSaldoAtualDoMesPorConta = (Model.SaldoAtualDoMesPorConta > 0 ? "green" : "red");
        string corSaldoDoMesPorConta = (Model.SaldoDoMesPorConta > 0 ? "green" : "red");
        string corSaldoDoMesTodasAsContas = (Model.SaldoDoMesTodasAsContas > 0 ? "green" : "red");

        <tr class="text-right">
            <td></td>
            <td></td>
            <td>
                <h5>Saldo Atual: <strong style="color: @corSaldoAtualDoMesPorConta">@Html.DisplayFor(model => model.SaldoAtualDoMesPorConta)</strong></h5>
                <h5>Saldo no fim do mês: <strong style="color: @corSaldoDoMesPorConta">@Html.DisplayFor(model => model.SaldoDoMesPorConta)</strong></h5>
                <h6>Saldo de todas as contas no fim do mês: <span style="color: @corSaldoDoMesTodasAsContas">@Html.DisplayFor(model => model.SaldoDoMesTodasAsContas)</span></h6>
            </td>
            <td></td>
        </tr>
    }
</table>

<link rel="stylesheet" href="~/Content/botao-novo-lancamento.css">