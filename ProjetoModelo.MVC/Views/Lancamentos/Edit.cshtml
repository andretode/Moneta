@model Moneta.Application.ViewModels.LancamentoViewModel
@using Moneta.Application.ViewModels;
@using Moneta.Infra.CrossCutting.Enums;

@{
    ViewBag.Title = "Lançamento";
}

<h2>Lançamento</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LancamentoId)

        @{
            var cor = "lightcoral";
            if (Model.TipoDeTransacao == TipoTransacaoEnum.Receita)
            {
                cor = "lightgreen";
            }
            else if (Model.TipoDeTransacao == TipoTransacaoEnum.Transferencia)
            {
                cor = "lightblue";
            }
        }

        <div class="form-group">
            <div class="control-label col-md-2"></div>
            <div class="col-md-3">
                <h3><span class="label" style="display:block; background-color: @cor">@Model.TipoDeTransacao</span></h3>
                @Html.HiddenFor(model => model.TipoDeTransacao)
                @Html.HiddenFor(model => model.LancamentoIdTransferencia)
                @Html.HiddenFor(model => model.Fake)
                @Html.HiddenFor(model => model.LancamentoParceladoId)
                @Html.HiddenFor(model => model.IdDaParcelaNaSerie)
                @if (Model.LancamentoParcelado != null)
                {
                    @Html.HiddenFor(model => model.LancamentoParcelado.LancamentoParceladoId)
                    @Html.HiddenFor(model => model.LancamentoParcelado.LancamentoBaseId)
                    @Html.HiddenFor(model => model.LancamentoParcelado.Periodicidade)
                    @Html.HiddenFor(model => model.LancamentoParcelado.DataInicio)
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Conta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ContaId", (SelectList)@ViewBag.Contas, String.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataVencimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataVencimento, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.DataVencimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoriaId", (SelectList)@ViewBag.Categorias, String.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pago, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pago, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.Pago, "", new { @class = "text-danger" })
            </div>
        </div>

@{
    if (Model.LancamentoParceladoId != null)
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-4" style="background-color:lightblue">
                <div>
                    <p></p>
                    <i class="icon-white glyphicon glyphicon-retweet"></i><strong> Este lançamento se repete em mais datas</strong>
                    <div class="">
                        <p class="text-left">
                            <input type="radio" id="AlterarApenasEste" name="LancamentoParcelado.TipoDeAlteracaoDaRepeticao" value="@TipoDeAlteracaoDaRepeticaoEnum.AlterarApenasEste"
                                   checked /> Alterar apenas este lançamento
                        </p>
                        <p class="text-left">
                            <input type="radio" id="AlterarEsteESeguintes" name="LancamentoParcelado.TipoDeAlteracaoDaRepeticao" value="@TipoDeAlteracaoDaRepeticaoEnum.AlterarEsteESeguintes"
                                   /> Alterar este lançamento e todos os seguintes
                        </p>
                        <p class="text-left">
                            <input type="radio" id="AlterarTodos" name="LancamentoParcelado.TipoDeAlteracaoDaRepeticao" value="@TipoDeAlteracaoDaRepeticaoEnum.AlterarTodos"
                                   /> Alterar todos os lançamentos
                        </p>
                    </div>
                </div>
            </div>
        </div>
    }
}

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
                <input value="Cancelar" class="btn btn-default" onclick="javascript: window.history.back();" />
            </div>
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
    $(function () { // will trigger when the document is ready
        $('.datepicker').datepicker('setDate', new Date('@Model.DataVencimento.ToString("MM/dd/yyyy")'));
    });
</script>
}
