@model Moneta.Application.ViewModels.LancamentoViewModel
@using Moneta.Infra.CrossCutting.Enums;

@{
    ViewBag.Title = "Remover";
}

<h2>Remover</h2>

<h3>Tem certeza que deseja remover?</h3>
<div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <h4>Lançamento</h4>
    <hr />
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    string msgErro = "Não foi possível concluir a operação. Favor repassar o erro a equipe Moneta: 'O campo escondido [{0}] não veio com a informação'";
    
    @Html.HiddenFor(model => model.LancamentoId)
    @Html.ValidationMessageFor(model => model.LancamentoId, String.Format(msgErro, "LancamentoId"), new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Descricao)
    @Html.ValidationMessageFor(model => model.Descricao, String.Format(msgErro, "Descricao"), new { @class = "text-danger" })
    @Html.HiddenFor(model => model.DataVencimento)
    @Html.ValidationMessageFor(model => model.DataVencimento, String.Format(msgErro, "DataVencimento"), new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Valor)
    @Html.ValidationMessageFor(model => model.Valor, String.Format(msgErro, "Valor"), new { @class = "text-danger" })
    @Html.HiddenFor(model => model.DataCadastro)
    @Html.ValidationMessageFor(model => model.DataCadastro, String.Format(msgErro, "DataCadastro"), new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CategoriaId)
    @Html.ValidationMessageFor(model => model.CategoriaId, String.Format(msgErro, "CategoriaId"), new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ContaId)
    @Html.ValidationMessageFor(model => model.ContaId, String.Format(msgErro, "ContaId"), new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Fake)
    @Html.ValidationMessageFor(model => model.Fake, String.Format(msgErro, "Fake"), new { @class = "text-danger" })
    @Html.HiddenFor(model => model.BaseDaSerie)
    @Html.ValidationMessageFor(model => model.BaseDaSerie, String.Format(msgErro, "BaseDaSerie"), new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Pago)
    @Html.ValidationMessageFor(model => model.Pago, String.Format(msgErro, "Pago"), new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdDaParcelaNaSerie)
    @Html.ValidationMessageFor(model => model.Pago, String.Format(msgErro, "IdDaParcelaNaSerie"), new { @class = "text-danger" })
    @Html.HiddenFor(model => model.LancamentoParceladoId)
    @Html.ValidationMessageFor(model => model.Pago, String.Format(msgErro, "LancamentoParceladoId"), new { @class = "text-danger" })
    @Html.HiddenFor(model => model.LancamentoIdTransferencia)
    @Html.ValidationMessageFor(model => model.LancamentoIdTransferencia, String.Format(msgErro, "LancamentoIdTransferencia"), new { @class = "text-danger" })
    @Html.HiddenFor(model => model.GrupoLancamentoId)
    @Html.ValidationMessageFor(model => model.GrupoLancamentoId, String.Format(msgErro, "GrupoLancamentoId"), new { @class = "text-danger" })
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Descricao)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Descricao)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DataVencimento)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DataVencimento)
        </dd>

    </dl>

    if (Model.LancamentoParceladoId != null)
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="col-md-5" style="background-color:lightblue">
                    <p></p>
                    <i class="icon-white glyphicon glyphicon-retweet"></i><strong> Este lançamento se repete em mais datas</strong>
                    <div class="">
                        <p class="text-left">
                            <input type="radio" id="RemoverApenasEste" name="LancamentoParcelado.TipoDeAlteracaoDaRepeticao" value="@TipoDeAlteracaoDaRepeticaoEnum.AlterarApenasEste" checked /> Remover apenas este lançamento
                        </p>
                        <p class="text-left">
                            <input type="radio" id="RemoverEsteESeguintes" name="LancamentoParcelado.TipoDeAlteracaoDaRepeticao" value="@TipoDeAlteracaoDaRepeticaoEnum.AlterarEsteESeguintes" /> Remover este lançamento e todos os seguintes
                        </p>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="form-group">
        &nbsp;
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Remover" class="btn btn-default" />
            <input value="Cancelar" class="btn btn-default" onclick="javascript: window.history.back();" />
        </div>
    </div>
    <br />
}
</div>
