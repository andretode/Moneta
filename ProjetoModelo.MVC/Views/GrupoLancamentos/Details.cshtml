@model Moneta.Application.ViewModels.GrupoLancamentoViewModel
@using Moneta.Application.ViewModels

@{
    ViewBag.Title = "Detalhes";
}

<h2>@ViewBag.Title</h2>

<div>
    <h4>Grupo de Lançamento</h4>
    <div>
        <a class="btn btn-default" title="Voltar" onclick="javascript: window.history.back();">
            <i class="icon-white glyphicon glyphicon-arrow-left"></i>
        </a>
        <a class="btn btn-default" title="Editar"
           href="@Url.Action("Edit", "GrupoLancamentos", new { id = Model.GrupoLancamentoId })">
            <i class="icon-white glyphicon glyphicon-edit"></i>
        </a>
        <a class="btn btn-default" title="Remover" onclick="return confirm('Tem certeza que deseja remover?')"
           href="@Url.Action("Delete", "GrupoLancamentos", new { id = Model.GrupoLancamentoId }) ">
            <i class="icon-white glyphicon glyphicon-trash"></i>
        </a>
    </div>
    <br />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Descricao)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Descricao)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DataVencimento)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.DataVencimento)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Valor)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Valor)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Pago)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Pago)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Conta)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Conta.Descricao)
        </dd>

        @if (Model.NumeroDocumento != null && Model.NumeroDocumento != "")
        {
            <dt>
                @Html.DisplayNameFor(model => model.NumeroDocumento)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.NumeroDocumento)
            </dd>
        }
    </dl>

    <hr />
    <div>
        @Html.Partial("_LancamentosDoGrupo", Model)
    </div>
</div>

@Html.Partial("_AdicionarLancamento", new LancamentoViewModel() { 
    ContaId = Model.Conta.ContaId,
    DataVencimento = Model.DataVencimento,
    GrupoLancamentoId = Model.GrupoLancamentoId,
    NumeroDocumento = Model.NumeroDocumento
})

@Html.Partial("_PesquisarGrupoLancamento", new GrupoPesquisaViewModel())

@section Scripts {
    <script type="text/javascript">
        function salvarEdicao(lancamentoId)
        {
            var categoriaSelecionada = $("#Categoria_" + lancamentoId + " option:selected").text();
            $("#spanCategoriaDescricao_" + lancamentoId).html("&nbsp" + categoriaSelecionada);
            $("#btnCategoria_" + lancamentoId).hide();
            $("#spanLoading_" + lancamentoId).html('<img src="/Content/images/loading.gif" heigth="25" width="25">');
            esconderEdicao(lancamentoId);
            processarEdicao(lancamentoId, $('#Categoria_' + lancamentoId).val());
        }

        function mostrarEdicao(lancamentoId) {
            $('#divCategoriaEdit_' + lancamentoId).show();
            $('#divCategoriaDisplay_' + lancamentoId).hide();
        }
        function esconderEdicao(lancamentoId) {
            $('#divCategoriaEdit_' + lancamentoId).hide();
            $('#divCategoriaDisplay_' + lancamentoId).show();
        }

        function processarEdicao(lancamentoId, categoriaId) {
            $.post("/Lancamentos/EditarCategoria",
                { lancamentoId: lancamentoId, categoriaId: categoriaId },
                function (data) {
                    if (data.status === "Ok") {
                        location.reload();
                    }
                    else {
                        alert("Erro ao salvar a categoria!");
                    }
                }
            );
        }
        
        function pesquisarGrupoLancamento() {
            $("#divModalGrupoPesquisa").fadeIn();
        }

        function getGruposLancamento() {
            var descricaoGrupoPesquisa = $("#DescricaoGrupoPesquisa").val();

            if (descricaoGrupoPesquisa.length <= 2)
                return;

            //$('#ExtratoBancarioIdSelecionado').val(id);
            $('#divListagem').html('<img src="/Content/images/loading.gif">');
            $.ajax(
            {
                type: 'GET',
                url: '/GrupoLancamentos/PesquisarGrupos?descricaoGrupoPesquisa=' + descricaoGrupoPesquisa + "&grupoLancamentoIdPai=@Model.GrupoLancamentoId",
                dataType: 'html',
                cache: false,
                async: true,
                success: function (data) {
                    $('#divListagem').html(data);
                }
            });
        }
        
        function incluirGrupoLancamento() {
            var grupoIdSelecionado = $('input[name=radio_grupos]:checked').val();

            if (grupoIdSelecionado == null)
                return alert("Selecione um lançamento");

            $.post("/GrupoLancamentos/IncluirGrupoLancamento",
                { grupoLancamentoIdPai: '@Model.GrupoLancamentoId' , grupoLancamentoIdFilho: grupoIdSelecionado },
                function (data) {
                    if (data.status === "Ok") {
                        location.reload();
                    }
                    else {
                        alert("Erro ao incluir o lançamento!");
                    }
                }
            );
        }

        function adicionarLancamento() {
            $("#divModalNovoLancamento").fadeIn();
        }

        function criarLancamento() {
            if (validarForm())
            {
                $("#formCriarLancamento").submit();
            }
        }

        function closeWindow() {
            $("#divModalNovoLancamento").hide();
        }

        function closeModalGrupoPesquisa() {
            $("#divModalGrupoPesquisa").hide();
        }

        function validarForm()
        {
            var tipoTransacao = $('input[name="TipoDeTransacao"]:checked').val();
            if (tipoTransacao == null)
            {
                alert("Informe o tipo de transação");
                return false;
            }

            if ($("#Descricao").val() == "") {
                alert("Preencha a descrição");
                $("#Descricao").focus();
                return false;
            }

            if ($("#Valor").val() == "" || $("#Valor").val() == "0,00") {
                alert("Preencha o valor");
                $("#Valor").focus();
                return false;
            }

            if ($("#CategoriaId").val() == "") {
                alert("Selecione a categoria");
                $("#CategoriaId").focus();
                return false;
            }
            
            return true;
        }

    </script>
}