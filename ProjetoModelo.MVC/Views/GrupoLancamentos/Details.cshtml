@model Moneta.Application.ViewModels.GrupoLancamentoViewModel
@using Moneta.Infra.CrossCutting.Enums
@using Moneta.Application.ViewModels

@{
    ViewBag.Title = "Detalhes";
}

<h2>@ViewBag.Title</h2>

<div>
    <h4>Grupo de Lançamento</h4>
    <div>
        <a class="btn btn-default" title="Voltar" onclick="javascript: window.history.back();">
            <i class="icon-white glyphicon glyphicon-arrow-left"></i>
        </a>
        <a class="btn btn-default" title="Editar"
           href="@Url.Action("Edit", "GrupoLancamentos", new { id = Model.GrupoLancamentoId })">
            <i class="icon-white glyphicon glyphicon-edit"></i>
        </a>
        <a class="btn btn-default" title="Remover" onclick="return confirm('Tem certeza que deseja remover?')"
           href="@Url.Action("Delete", "GrupoLancamentos", new { id = Model.GrupoLancamentoId }) ">
            <i class="icon-white glyphicon glyphicon-trash"></i>
        </a>
    </div>
    <br />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Descricao)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Descricao)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DataVencimento)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DataVencimento)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Conta)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Conta.Descricao)
        </dd>
    </dl>

    <hr />
    <div>
        <a class="btn btn-default" title="Importar OFX" onclick="return confirm('Recurso em desenvolvimento. Em breve estará nas novas versões!')"
           href="   ">
            <i class="icon-white glyphicon glyphicon-import"></i>
        </a>
        <a class="btn btn-default" title="Adicionar Lançamento"
           href="@Url.Action("Create", "Lancamentos", new LancamentosDoMesViewModel() { GrupoLancamentoId = Model.GrupoLancamentoId,
                contaIdFiltro = Model.ContaId, NovaTransacao = TipoTransacaoEnum.Despesa })">
            <i class="icon-white glyphicon glyphicon-plus"></i>
        </a>
        <a class="btn btn-default" title="Adicionar Transferência"
           href="@Url.Action("AdicionarTransferencia", "GrupoLancamentos", new { grupoLancamentoId = Model.GrupoLancamentoId }) ">
            <i class="icon-white glyphicon glyphicon-transfer"></i>
        </a>
    </div>
    <br/>
    <table class="table">
        <tr style="background-color: #e6e6e6">
            <th>
                @Html.DisplayName("Data")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lancamentos.First().DescricaoResumida)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lancamentos.First().Categoria.Descricao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lancamentos.First().Valor)
            </th>
        </tr>

        @foreach (var item in Model.Lancamentos)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DataVencimento)
                </td>
                <td>
                    <a href="/Lancamentos/DetailsLancamentoAgrupado?id=@item.LancamentoId">
                        @Html.DisplayFor(modelItem => item.DescricaoResumida)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Conta.Descricao)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Valor)
                </td>
            </tr>
        }
    </table>
</div>

