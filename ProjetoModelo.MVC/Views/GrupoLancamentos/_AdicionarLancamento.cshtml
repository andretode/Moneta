@model Moneta.Application.ViewModels.LancamentoViewModel
@using Moneta.Infra.CrossCutting.Enums


@using (Html.BeginForm("AdicionarDespesa", "GrupoLancamentos", FormMethod.Post, new { id = "formCriarLancamento" }))
{
    @Html.AntiForgeryToken()

    <!--
        Inicio da janela de conciliação
    -->
    <div id="divModalNovoLancamento" class="mascara">
        <div class="modalBox form-horizontal">
            <div class="col-md-12">
                <h4 class="pull-left">
                    <i class="icon-white glyphicon glyphicon-plus"></i> Novo Lançamento
                </h4>
                <a href="javascript:closeWindow()" class="pull-right btn-lg" style="" title="Fechar">
                    <i class="icon-white glyphicon glyphicon-remove"></i>
                </a>
            </div>
            <br />
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.TipoDeTransacao, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <span style="vertical-align: -33%">
                            @Html.RadioButtonFor(model => model.TipoDeTransacao, TipoTransacaoEnum.Despesa) Despesa
                            @Html.RadioButtonFor(model => model.TipoDeTransacao, TipoTransacaoEnum.Receita) Receita
                            @Html.ValidationMessageFor(model => model.TipoDeTransacao, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.ContaId)
                            @Html.HiddenFor(model => model.DataVencimento)
                            @Html.HiddenFor(model => model.GrupoLancamentoId)
                            @Html.HiddenFor(model => model.NumeroDocumento)
                        </span>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @step = "0.01" } })
                        @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CategoriaId", (SelectList)@ViewBag.Categorias, String.Empty, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <br />
            <div class="col-md-12">
                <a class="btn btn-sm btn-primary" href="javascript: criarLancamento()">Criar</a>
                <a class="btn btn-sm btn-default" href="javascript: closeWindow()">Cancelar</a>
            </div>
        </div>
    </div>
    <!--
        Fim da janela de conciliação
    -->
}

<style>
    tr.espacoEntreColunas > td {
        padding-right: 1em;
    }
    
    .modalBox {
        display: block;
        width: 40%;
        position: fixed;
        left: 30%;
        top: 55px;
        background: #FFF;
        z-index: 9900;
        padding: 10px;
        border-radius: 10px;
        -webkit-box-shadow: -1px -8px 72px -6px rgba(0,0,0,0.75);
        -moz-box-shadow: -1px -8px 72px -6px rgba(0,0,0,0.75);
        box-shadow: -1px -8px 72px -6px rgba(0,0,0,0.75);
    }

    .mascara {
        display: none;
        position: absolute;
        margin: 25%;
        top: 0;
        width: 100%;
        z-index: 9000;
        background-color: #000;
    }

    @@media only screen and (max-width: 1200px) {
        .modalBox {
            width: 60%;
            left: 20%;
        }
    }

    @@media only screen and (max-width: 700px) {

        .modalBox {
            width: 90%;
            left: 5%;
            top: 50px;
        }

        .mascara {
            left: 0;
            margin: 20%;
            width: 100%;
        }
    }

    @@media only screen and (max-device-width: 480px) {
        .modalBox {
            width: 81%;
            left: 1%;
            top: 50px;
        }
    }

    br {
        content: " ";
        display: block;
        margin: 5px 0;
    }
</style>